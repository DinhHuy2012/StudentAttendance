@model BusinessObjects.DTO.ClassDTO.ClassesDTO

@{
    var index = 1; // Bắt đầu từ 1
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>
<h2>ClassCode: @Model.ClassCode</h2>
<button type="button" class="btn btn-info" id="showFormButtonAdd">Add Students</button>
<a asp-controller="Enrollment" asp-action="ExportToExcel" asp-route-id="@Model.ClassId" class="btn btn-success">Export to Excel</a>


<!-- Nút Import ban đầu -->
<button type="button" class="btn btn-success" id="showFormButton">Import File Excel</button>
<a asp-controller="Schedule" asp-action="ScheduleOfClass" asp-route-classId="@Model.ClassId" asp-route-courseId="@ViewBag.FirstCourseId" class="btn btn-danger">View Schedule</a>

<a asp-controller="Class" asp-action="Index" class="btn btn-secondary">Back to List</a>

<!-- Form bị ẩn ban đầu -->
<div id="importForm" style="display: none;">
    <form asp-controller="Enrollment" asp-action="ImportFile" method="post" enctype="multipart/form-data">
        <div class="form-group">
            <label for="fileInput">Chọn file Excel:</label>
            <input type="file" name="file" accept=".xlsx" required />
        </div>
        <input type="hidden" id="classId" name="classId" value="@Model.ClassId" />
        <button type="submit" class="btn btn-success">Import File Excel</button>
    </form>
</div>


<div id="addForm" style="display: none;">

<form id="enrollmentForm" asp-controller="Enrollment" asp-action="AddMember" method="post">
    <div class="form-group">
        <label asp-for="ClassId" class="control-label"></label>
        <input asp-for="ClassId" class="form-control" value="@Model.ClassId" readonly="readonly" />
        <span asp-validation-for="ClassId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label>Select Students</label><br />
        <select id="studentTags" name="StudentIds" class="form-control" multiple="multiple" style="width: 100%;margin-bottom:20px;"></select>
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Add Students</button>
    </div>
</form>
</div>

<h4 style="color:red">@ViewBag.Message</h4>

<script>
    document.getElementById('showFormButton').addEventListener('click', function () {
        // Hiển thị form khi nhấn nút "Import"
        document.getElementById('importForm').style.display = 'block';
        // Ẩn nút "Import"
        document.getElementById('showFormButton').style.display = 'none';
    });
</script>



<script>
    document.getElementById('showFormButtonAdd').addEventListener('click', function () {
        // Hiển thị form khi nhấn nút "Import"
        document.getElementById('addForm').style.display = 'block';
        // Ẩn nút "Import"
        document.getElementById('showFormButtonAdd').style.display = 'none';
    });
</script>
<table style="margin-top:20px;">
    <thead>
        <tr>
            <th>INDEX</th>
            <th>IMAGE</th>
            <th>CODE</th>
            <th>EMAIL</th>
            <th>FullName</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var s in Model.StudentNames)
        {
            <tr>

                <td>@index</td> <!-- Hiển thị giá trị index -->
                @if(s.Avatar == null)
                {
                    <td> <img src="~/image/avatar/no-image.jpg" alt="no-image.jpg" /></td>
                }
                else
                {

                    <td> <img src="~/image/avatar/@s.Avatar" alt="@s.Avatar" /></td>

                }
                <td>
                    @{
                        // Lấy tên khoa từ đối tượng student
                        string departmentName = s.DepartmentName;

                        // Xử lý để lấy chữ cái đầu tiên của tên khoa
                        string departmentCode = "";
                        if (!string.IsNullOrWhiteSpace(departmentName))
                        {
                            // Chia tên khoa thành các từ
                            var words = departmentName.Split(' ');

                            // Lấy chữ cái đầu tiên của từ đầu tiên
                            departmentCode += words[0][0];

                            // Nếu có từ thứ hai, lấy chữ cái đầu tiên của từ đó
                            if (words.Length > 1)
                            {
                                departmentCode += words[1][0];
                            }
                        }

                        // Chỉ cần hiển thị mã khoa và mã sinh viên
                        @departmentCode @s.StudentCode.ToString("D5")
                    }
                </td>
                <td>@s.Email</td>
                <td><a href="/Student/Details/@s.StudentId">@s.FullName</a> </td>

            </tr>
            index++;
            <!-- Tăng giá trị index sau mỗi lần lặp -->
        }

      
    </tbody>
</table>



<style>
    table {
        width: 100%;
        border-collapse: collapse;
        table-layout: fixed; /* Cố định kích thước cột */
        text-align: left;
    }

    thead {
        background-color: #4a79cb;
        color: white;
    }

    th, td {
        padding: 12px;
        border-bottom: 1px solid #ddd;
        vertical-align: middle;
    }

    th {
        width: 25%; /* Chia đều không gian cho các cột */
    }

    td {
    }

    img {
        width: 80px;
        height: auto;
        border-radius: 5px;
    }

    tbody tr:nth-child(odd) {
        background-color: #f9f9f9;
    }

    tbody tr:nth-child(even) {
        background-color: #f2f2f2;
    }

    tbody tr:hover {
        background-color: #d1e0f7;
    }

</style>

<script>
    jQuery.noConflict();
    jQuery(document).ready(function ($) {
        $('#studentTags').select2({
            placeholder: 'Search for students',
            minimumInputLength: 1,
            ajax: {
                url: '/Class/SearchStudents',
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        search: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                id: item.studentId,
                                text: item.studentCode.toString().padStart(5, '0') + ' - ' + item.fullName
                            };
                        })
                    };
                },
                cache: true,
                error: function (xhr, status, error) {
                    console.error('Error fetching students:', status, error);
                    alert('There was an error searching for students.');
                }
            }
        });

        // Handle form submission

    });
</script>